{"version":3,"file":"static/js/743.143e9406.chunk.js","mappings":"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","sources":["pages/Users/Users.styled.jsx","services/usersApi.js","services/localStorageService .js","pages/Users/Users.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-inline: 24px;\n  padding-bottom: 24px;\n`;\n\nexport const PageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 24px;\n  margin-bottom: 24px;\n  border-bottom: 1px solid #888;\n`;\n\nexport const UsersList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 24px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6421e46c86992901b2be8a71.mockapi.io/users';\n// axios.defaults.params = { limit: 3 };\nconst perPage = 3;\n\nexport async function fetchUsers(page) {\n  const response = await axios.get(`?page=${page}&limit=${perPage}`);\n  return response.data;\n}\n\nexport async function updateUser({ id, followers }) {\n  await axios.put(`/${id}`, { followers });\n}\n","export const localStorageService = {\n  save(key, value) {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('Local storage set error: ', error.message);\n    }\n  },\n\n  load(key) {\n    try {\n      const data = localStorage.getItem(key);\n      return data === null ? [] : JSON.parse(data);\n    } catch (error) {\n      console.error('Local storage get error: ', error.message);\n    }\n  },\n};\n","import { useLocation } from 'react-router-dom';\nimport { PageWrapper, PageHead, UsersList } from './Users.styled';\nimport { BackLink, UserCard } from 'components';\nimport { useEffect, useState } from 'react';\nimport { fetchUsers, updateUser } from 'services/usersApi';\nimport { localStorageService as storage } from 'services/localStorageService ';\n\nimport { Button } from 'components/Button/Button.styled';\n\nexport default function Users() {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  // ==================================================\n  const [page, setPage] = useState(1);\n  const [users, setUsers] = useState([]);\n  const [followingUsers, setFollowingUsers] = useState(\n    storage.load('followingUsers') ?? []\n  );\n  const [isBtnLoadMore, setIsBtnLoadMore] = useState(true);\n  const [filter, setFilter] = useState('all');\n\n  useEffect(\n    () => storage.save('followingUsers', followingUsers),\n    [followingUsers]\n  );\n\n  useEffect(() => {\n    async function getUsers() {\n      try {\n        const userList = await fetchUsers(page);\n        userList.length > 0\n          ? setUsers(prev => [...prev, ...userList])\n          : setIsBtnLoadMore(false);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    getUsers();\n  }, [page]);\n\n  // useEffect(() => setIsBtnLoadMore(filter === 'all'), [filter]);\n\n  const handleFollowingButton = user => {\n    const index = users.findIndex(({ id }) => user.id === id);\n    const isFollowingUser = followingUsers.some(({ id }) => user.id === id);\n    if (isFollowingUser) {\n      users[index].followers -= 1;\n      setFollowingUsers(followingUsers.filter(({ id }) => id !== user.id));\n    } else {\n      users[index].followers += 1;\n      setFollowingUsers(prev => [...prev, user]);\n    }\n    updateFollowers(user);\n  };\n\n  async function updateFollowers(user) {\n    try {\n      await updateUser(user);\n    } catch (error) {\n      console.log('error :>> ', error);\n    }\n  }\n\n  const handleLoadMore = () => setPage(prev => prev + 1);\n\n  const filterOption = e => setFilter(e.target.value);\n\n  const filteredUserList = () => {\n    const ids = followingUsers.map(({ id }) => id);\n    switch (filter) {\n      case 'follow':\n        return users.filter(({ id }) => !ids.includes(id));\n      case 'followings':\n        return users.filter(({ id }) => ids.includes(id));\n      default:\n        return users;\n    }\n  };\n\n  // ==================================================\n  return (\n    <main>\n      <PageWrapper>\n        <PageHead>\n          <BackLink to={backLinkHref}>Back Home</BackLink>\n          <label>\n            Filter by:\n            <select name=\"followers\" onChange={filterOption} defaultValue=\"all\">\n              <option value=\"all\">All</option>\n              <option value=\"follow\">Follow</option>\n              <option value=\"followings\">Followings</option>\n            </select>\n          </label>\n        </PageHead>\n        <UsersList>\n          {filteredUserList().map(user => (\n            <li key={user.id}>\n              <UserCard\n                user={user}\n                followingUsers={followingUsers}\n                handleFollowingButton={handleFollowingButton}\n              ></UserCard>\n            </li>\n          ))}\n        </UsersList>\n        {isBtnLoadMore && (\n          <Button type=\"button\" onClick={handleLoadMore}>\n            Load more\n          </Button>\n        )}\n      </PageWrapper>\n    </main>\n  );\n}\n"],"names":["PageWrapper","styled","PageHead","UsersList","axios","fetchUsers","page","response","data","updateUser","id","followers","localStorageService","key","value","localStorage","setItem","JSON","stringify","error","console","message","getItem","parse","Users","backLinkHref","useLocation","state","from","useState","setPage","users","setUsers","storage","followingUsers","setFollowingUsers","isBtnLoadMore","setIsBtnLoadMore","filter","setFilter","useEffect","userList","length","prev","log","getUsers","handleFollowingButton","user","index","findIndex","some","updateFollowers","to","name","onChange","e","target","defaultValue","ids","map","includes","filteredUserList","type","onClick"],"sourceRoot":""}