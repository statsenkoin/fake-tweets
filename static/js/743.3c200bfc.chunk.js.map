{"version":3,"file":"static/js/743.3c200bfc.chunk.js","mappings":"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","sources":["services/usersApi.js","services/localStorageService .js","pages/Users/Users.styled.jsx","pages/Users/Users.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6421e46c86992901b2be8a71.mockapi.io/users';\nexport const PER_RAGE = 4;\n\nexport async function fetchUsers(page) {\n  const response = await axios.get(`?page=${page}&limit=${PER_RAGE}`);\n  return response.data;\n}\n\nexport async function updateUser({ id, followers }) {\n  await axios.put(`/${id}`, { followers });\n}\n\nexport async function fetchAllUsers() {\n  const response = await axios.get();\n  return response.data.length;\n}\n","export const localStorageService = {\n  save(key, value) {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('Local storage set error: ', error.message);\n    }\n  },\n\n  load(key) {\n    try {\n      const data = localStorage.getItem(key);\n      return data === null ? [] : JSON.parse(data);\n    } catch (error) {\n      console.error('Local storage get error: ', error.message);\n    }\n  },\n};\n","import styled from 'styled-components';\n\nexport const PageWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 784px;\n  gap: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 24px;\n`;\n\nexport const PageTab = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 24px;\n  border-bottom: 1px solid var(--color-bg-dark-main);\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  fetchUsers,\n  updateUser,\n  PER_RAGE,\n  fetchAllUsers,\n} from 'services/usersApi';\nimport { localStorageService as storage } from 'services/localStorageService ';\nimport { BackLink, Filter, UsersList } from 'components';\nimport { Button } from 'components/Button/Button.styled';\nimport { PageWrapper, PageTab } from './Users.styled';\n\nexport default function Users() {\n  const [page, setPage] = useState(1);\n  const [users, setUsers] = useState([]);\n  const [followingUsers, setFollowingUsers] = useState(\n    storage.load('followingUsers') ?? []\n  );\n  const [isLoadMoreBtnVisible, setIsLoadMoreBtnVisible] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const [maxPages, setMaxPages] = useState(1);\n  const [maxDbPages, setMaxDbPages] = useState(1);\n\n  let cashedUsers = useRef([]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  /** Get localStorage */\n  useEffect(\n    () => storage.save('followingUsers', followingUsers),\n    [followingUsers]\n  );\n\n  /** Init page */\n  useEffect(() => {\n    async function initPage() {\n      try {\n        const length = await fetchAllUsers();\n        setMaxDbPages(calculateMaxPages(length));\n        setMaxPages(calculateMaxPages(length));\n        setIsLoadMoreBtnVisible(length ? true : false);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    initPage();\n  }, []);\n\n  /** Handle page, filter change */\n  useEffect(() => {\n    const getUsers = async () => {\n      if (filter !== 'followings') {\n        try {\n          const newUsers = await fetchUsers(page);\n          filterUsers(newUsers);\n        } catch (error) {\n          console.log('error :>> ', error);\n        }\n      }\n    };\n    getUsers();\n    // eslint-disable-next-line\n  }, [page, filter]);\n\n  /** Set loadMore button visible*/\n  useEffect(() => {\n    setIsLoadMoreBtnVisible(page >= maxPages ? false : true);\n    if (page > 1) {\n      window.scrollBy(0, window.innerHeight / 2);\n    }\n  }, [maxPages, page]);\n\n  /** Update maxPages */\n  useEffect(() => {\n    setMaxPages(\n      filter === 'followings'\n        ? calculateMaxPages(followingUsers.length)\n        : maxDbPages\n    );\n  }, [filter, followingUsers.length, maxDbPages]);\n\n  /** Set filter */\n  const filterOption = value => {\n    cashedUsers.current = [];\n    setPage(1);\n    setUsers([]);\n    setFilter(value);\n  };\n\n  /** Filter fetched users */\n  const filterUsers = newUsers => {\n    if (filter === 'all') {\n      setUsers(prev => [...prev, ...newUsers]);\n    } else if (filter === 'follow') {\n      const ids = followingUsers.map(({ id }) => id);\n      const filteredUsers = newUsers.filter(({ id }) => !ids.includes(id));\n      cashedUsers.current = [...cashedUsers.current, ...filteredUsers];\n\n      /** If render list length < page*PER_PAGE -> add next page */\n      const delta = cashedUsers.current.length % PER_RAGE;\n      if (delta) {\n        const temp = [...cashedUsers.current];\n        temp.splice(-delta, delta);\n        newUsers = temp;\n      } else {\n        newUsers = cashedUsers.current;\n      }\n\n      if (page === maxPages) newUsers = cashedUsers.current;\n      if (\n        cashedUsers.current.length - users.length < PER_RAGE &&\n        page < maxPages\n      ) {\n        handleLoadMore();\n      }\n\n      setUsers(newUsers);\n    }\n  };\n\n  /** filter users to render */\n  const filteredUserList = () => {\n    switch (filter) {\n      case 'followings':\n        return [...followingUsers].splice(0, page * PER_RAGE);\n      case 'follow':\n        return cashedUsers.current;\n      default:\n        return users;\n    }\n  };\n\n  /** add/remove user to/from following/followUsers list */\n  const handleFollowingButton = user => {\n    const isFollowingUser = followingUsers.some(({ id }) => user.id === id);\n    if (isFollowingUser) {\n      user.followers -= 1;\n      setFollowingUsers(followingUsers.filter(({ id }) => id !== user.id));\n    } else {\n      user.followers += 1;\n      setFollowingUsers(prev => [...prev, user]);\n    }\n    if (filter === 'follow') updateFollowUsers(user);\n\n    updateFollowers(user);\n  };\n\n  /**\n   * Remove user from list on followingButton click\n   * and add next page if need\n   */\n  const updateFollowUsers = user => {\n    const index = users.findIndex(({ id }) => user.id === id);\n\n    const oldCashedUsers = [...cashedUsers.current];\n    cashedUsers.current.splice(index, 1);\n\n    let newUsers = [];\n    const delta = cashedUsers.current.length % PER_RAGE;\n    const temp = [...cashedUsers.current];\n    temp.splice(-delta, delta);\n    if (\n      (oldCashedUsers.length % PER_RAGE) -\n        (cashedUsers.current.length % PER_RAGE) <\n      0\n    ) {\n      filterUsers(newUsers);\n    } else {\n      newUsers = temp;\n      if (page === maxPages) newUsers = cashedUsers.current;\n      setUsers(newUsers);\n    }\n  };\n\n  /** Update user data on server */\n  const updateFollowers = async user => {\n    try {\n      await updateUser(user);\n    } catch (error) {\n      console.log('error :>> ', error);\n    }\n  };\n\n  const calculateMaxPages = length => Math.ceil(length / PER_RAGE);\n\n  const handleLoadMore = () => setPage(prev => prev + 1);\n\n  return (\n    <PageWrapper>\n      <PageTab>\n        <BackLink to={backLinkHref}>Back Home</BackLink>\n        <Filter filterOption={filterOption} />\n      </PageTab>\n      <UsersList\n        filteredUserList={filteredUserList}\n        followingUsers={followingUsers}\n        handleFollowingButton={handleFollowingButton}\n      />\n      {isLoadMoreBtnVisible && (\n        <Button type=\"button\" onClick={handleLoadMore}>\n          Load more\n        </Button>\n      )}\n    </PageWrapper>\n  );\n}\n"],"names":["axios","fetchUsers","page","response","data","updateUser","id","followers","fetchAllUsers","length","localStorageService","key","value","localStorage","setItem","JSON","stringify","error","console","message","getItem","parse","PageWrapper","styled","PageTab","Users","useState","setPage","users","setUsers","storage","followingUsers","setFollowingUsers","isLoadMoreBtnVisible","setIsLoadMoreBtnVisible","filter","setFilter","maxPages","setMaxPages","maxDbPages","setMaxDbPages","cashedUsers","useRef","backLinkHref","useLocation","state","from","useEffect","calculateMaxPages","log","initPage","getUsers","newUsers","filterUsers","window","scrollBy","innerHeight","prev","ids","map","filteredUsers","includes","current","delta","temp","splice","handleLoadMore","updateFollowUsers","user","index","findIndex","oldCashedUsers","updateFollowers","Math","ceil","to","filterOption","filteredUserList","handleFollowingButton","some","type","onClick"],"sourceRoot":""}